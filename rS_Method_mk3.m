V1_00 = [-11 -11 -11 -11 -11 -9 -9 -9 -9 -9 -9 -8 -8 -8 -6 -6 -4 -3 -3 -1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 8 8 10 11 13 11 8 0 -13 -31 -53 -78 -106 -136 -167 -195 -223 -249 -270 -289 -305 -319 -332 -347 -362 -376 -388 -398 -404 -409 -411 -413 -414 -414 -414 -413 -408 -401 -389 -374 -361 -347 -336 -326 -316 -307 -297 -285 -272 -259 -245 -234 -223 -215 -208 -202 -192 -180 -165 -146 -128 -110 -95 -81 -70 -58 -46 -33 -19 -8 0 8 13 18 22 25 30 33 38 42 45 47 48 48 48 48 48 50 50 52 52 53 55 55 57 58 58 60 60 60 62 62 62 62 62 63 63 63 65 65 65 65 67 67 67 68 72 73 77 80 82 83 85 85 85 85 87 88 92 94 97 100 102 102 102 102 104 105 107 110 114 117 120 122 124 124 125 125 125 127 130 132 134 135 137 137 137 135 134 132 130 129 129 127 125 124 122 119 114 110 107 104 100 99 97 94 90 85 78 72 63 57 52 47 43 42 37 33 27 22 17 11 8 5 5 5 3 3 3 3 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 5 5 5 5 5 5 5 3 3 3 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 5 3 1 -1 -3 -6 -9 -11 -13 -13 -13 -13 -13 -13 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -9 -9 -9 -8 -8 -8 -8 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -4 -4 -4 -4 -4 -4 -3 -3 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 3 3 5 5 6 8 10 10 10 8 1 -9 -26 -46 -71 -100 -128 -157 -185 -213 -239 -264 -287 -311 -331 -351 -369 -382 -394 -401 -408 -411 -414 -416 -418 -418 -416 -413 -408 -401 -391 -377 -362 -347 -329 -312 -295 -282 -270 -260 -255 -250 -245 -240 -234 -223 -212 -200 -187 -175 -163 -152 -140 -130 -118 -105 -93 -80 -66 -54 -44 -36 -29 -21 -11 -3 6 13 20 25 28 32 33 37 38 40 42 42 42 42 42 43 43 43 45 45 47 47 47 48 48 48 48 48 48 48 50 50 52 53 55 57 58 60 60 62 62 62 62 62 63 63 63 65 65 67 70 72 75 77 80 80 82 82 83 85 87 88 92 95 97 100 102 102 104 104 104 105 109 112 114 117 120 122 122 122 122 122 122 122 120 120 119 117 115 112 109 105 104 100 97 94 88 83 78 73 68 63 60 55 52 47 42 37 32 27 22 17 13 10 6 5 3 3 3 3 1 1 0 -1 -3 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -6 -6 -6 -6 -6 -6 -6 -6 -8 -8 -8 -8 -8 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -4 -4 -4 -4 -4 -4 -4 -3 -3 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -3 -3 -3 -3 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -3 -3 -3 -4 -4 -6 -6 -8 -9 -11 -13 -13 -14 -16 -16 -16 -18 -18 -18 -18 -18 -18 -18 -18 -18 -18 -18 -16 -16 -16 -14 -14 -13 -13 -11 -11 -11 -11 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -9 -8 -8 -8 -8 -8 -8 -8 -8 -8 -8 -8 -8 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -4 -3 -1 1 5 8 8 3 -4 -18 -36 -59 -85 -111 -140 -165 -190 -213 -235 -257 -277 -295 -314 -332 -349 -364 -376 -386 -391 -394 -394 -396 -396 -394 -394 -393 -388 -381 -371 -361 -349 -337 -326 -312 -299 -285 -270 -255 -240 -229 -218 -208 -202 -197 -193 -188 -182 -173 -165 -153 -141 -130 -118 -106 -95 -83 -73 -64 -54 -44 -34 -24 -14 -4 1 6 10 11 13 17 20 23 25 28 30 32 33 33 35 35 37 37 38 40 40 42 42 42 42 42 42 43 43 45 45 47 47 48 48 48 48 48 48 50 50 50 52 53 55 58 60 62 63 65 65 65 67 67 68 70 72 75 77 80 82 82 83 83 83 85 85 87 90 92 94 97 99 100 102 104 104 105 107 107 109 109 109 110 110 110 110 110 110 110 109 107 105 104 100 95 92 88 85 82 80 77 72 68 63 58 53 50 45 40 37 32 28 23 20 15 11 6 5 1 0 0 -1 -1 -1 -3 -3 -3 -4 -4 -4 -4 -4 -4 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
V2_00 = [-11 -11 -11 -11 -11 -11 -11 -11 -9 -9 -9 -8 -8 -8 -6 -6 -4 -4 -4 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 3 6 11 18 23 30 33 33 30 20 5 -16 -41 -68 -96 -126 -155 -183 -210 -237 -262 -287 -312 -336 -359 -382 -404 -424 -443 -461 -475 -488 -496 -503 -506 -508 -508 -505 -498 -488 -476 -459 -443 -426 -408 -393 -376 -361 -346 -331 -316 -302 -292 -282 -272 -262 -249 -234 -218 -202 -183 -165 -148 -131 -115 -101 -90 -80 -70 -58 -46 -33 -21 -8 1 10 15 20 23 27 30 32 33 35 35 37 38 38 40 42 42 43 45 45 47 47 47 48 48 50 50 52 53 53 53 55 55 55 55 55 57 57 58 60 62 63 65 67 67 68 70 72 72 73 75 77 80 82 83 85 88 88 90 92 92 93 97 99 102 104 107 109 110 112 114 115 119 122 124 127 129 130 132 134 135 137 139 142 142 144 144 144 144 144 144 144 142 140 137 135 134 132 130 129 127 125 124 119 114 109 102 97 90 85 80 75 70 63 57 48 42 37 32 28 25 22 18 15 11 8 5 1 0 0 -1 -1 -1 -1 -3 -3 -3 -3 -3 -4 -4 -4 -4 -4 -4 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -8 -8 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -6 -8 -8 -8 -8 -8 -8 -8 -8 -8 -8 -6 -6 -6 -6 -6 -6 -4 -4 -4 -6 -6 -6 -6 -6 -6 -6 -8 -8 -8 -9 -9 -9 -11 -11 -13 -13 -13 -14 -14 -14 -14 -16 -16 -16 -16 -16 -16 -16 -16 -14 -14 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -13 -14 -14 -14 -14 -13 -13 -13 -13 -13 -13 -13 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -11 -9 -6 -1 5 13 20 27 28 25 13 -3 -24 -51 -80 -108 -136 -165 -193 -220 -247 -274 -300 -327 -354 -379 -404 -428 -449 -468 -483 -496 -506 -513 -518 -518 -518 -513 -508 -498 -486 -471 -454 -434 -414 -394 -376 -359 -342 -331 -319 -307 -295 -284 -270 -257 -245 -235 -225 -215 -205 -192 -178 -160 -141 -123 -106 -93 -81 -73 -65 -56 -46 -36 -24 -13 -3 5 11 15 17 18 20 22 25 27 28 30 30 30 30 32 32 33 33 35 35 35 37 37 37 37 37 38 40 42 43 45 47 47 48 50 50 52 52 53 53 55 57 58 58 60 63 65 67 67 68 70 72 73 75 78 80 83 85 88 90 90 92 93 97 99 102 105 107 110 112 114 115 117 119 122 124 127 129 132 134 135 137 137 137 139 139 139 139 137 137 137 137 135 134 130 127 120 114 107 99 93 88 85 82 80 77 72 67 60 53 47 42 38 35 32 28 25 22 17 13 10 6 5 3 3 1 1 1 0 0 0 -1 -1 -1 -1 -1 -1 -3 -3 -3 -3 -3 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 -1 -1 -3 -3 -4 -4 -4 -6 -6 -6 -6 -6 -8 -8 -8 -6 -6 -6 -6 -6 -4 -4 -3 -3 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 1 6 11 18 25 30 35 33 28 18 1 -19 -44 -71 -100 -126 -153 -178 -203 -227 -252 -279 -306 -334 -362 -391 -414 -434 -449 -459 -465 -466 -468 -470 -473 -476 -480 -480 -476 -466 -451 -431 -409 -386 -362 -342 -322 -307 -292 -280 -269 -257 -244 -232 -218 -205 -193 -183 -172 -160 -148 -136 -123 -111 -100 -91 -83 -75 -66 -58 -46 -34 -21 -9 0 10 17 22 27 28 30 32 33 35 37 37 38 40 42 43 45 47 48 50 50 50 50 52 52 52 52 52 53 53 55 55 57 57 58 58 60 60 62 63 65 67 68 70 70 72 72 73 75 75 77 78 80 82 83 85 87 88 88 90 92 95 99 100 104 105 107 109 110 110 112 114 115 119 122 124 127 129 130 134 135 137 140 142 144 145 145 145 147 147 147 147 149 149 149 149 147 144 140 137 134 129 125 120 115 110 105 99 92 85 78 72 67 62 55 50 47 42 37 32 28 25 20 18 17 15 13 13 11 11 11 10 10 10 8 6 6 5 5 3 3 1 1 1 1 0 0 0 0 0 0 0 0 0 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -3 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
fs = 500
%% V1_00 
V1_sample = V1_00
% R PEAK DETECTION AND CORRECTION 
[qrspeaks,V1_locs,iwt_y, V1_tm] = find_RPeaks(V1_sample,fs)                %FUNCTION 1 --> wavelet transform 
[V1_locs] = R_Correction(V1_sample,V1_tm,fs,V1_locs)                       %FUNCTION 2 --> Correction wavelet transform 
% rS ENDTIME SEGMENTATION 
[V1_EndTime1] = rs_EndTime(V1_sample,V1_locs,fs,V1_tm,1);                  %FUNCTION 3 --> Find the end time of the rS 
[V1_EndTime2] = rs_EndTime(V1_sample,V1_locs,fs,V1_tm,2);                  %FUNCTION 3 --> Find the end time of the rS 
[V1_EndTime3] = rs_EndTime(V1_sample,V1_locs,fs,V1_tm,3);                  %FUNCTION 3 --> Find the end time of the rS 
% rS STARTTIME SEGMENTATION
[V1_StartTime1] = rs_StartTime(V1_sample,V1_locs,fs,V1_tm,1)               %FUNCTION 4 --> Find the end time of the rS 
[V1_StartTime2] = rs_StartTime(V1_sample,V1_locs,fs,V1_tm,2)               %FUNCTION 4 --> Find the end time of the rS 
[V1_StartTime3] = rs_StartTime(V1_sample,V1_locs,fs,V1_tm,3)               %FUNCTION 4 --> Find the end time of the rS 
%% V2_00 
V2_sample = V2_00
% R PEAK DETECTION AND CORRECTION 
[qrspeaks,V2_locs,iwt_y, V2_tm] = find_RPeaks(V2_sample,fs)                %FUNCTION 1 --> wavelet transform 
[V2_locs] = R_Correction(V2_sample,V2_tm,fs,V2_locs)                       %FUNCTION 2 --> Correction wavelet transform 
% rS ENDTIME SEGMENTATION 
[V2_EndTime1] = rs_EndTime(V2_sample,V2_locs,fs,V2_tm,1);                  %FUNCTION 3 --> Find the end time of the rS 
[V2_EndTime2] = rs_EndTime(V2_sample,V2_locs,fs,V2_tm,2);                  %FUNCTION 3 --> Find the end time of the rS 
[V2_EndTime3] = rs_EndTime(V2_sample,V2_locs,fs,V2_tm,3);                  %FUNCTION 3 --> Find the end time of the rS 
% rS STARTTIME SEGMENTATION
[V2_StartTime1] = rs_StartTime(V2_sample,V2_locs,fs,V2_tm,1)               %FUNCTION 4 --> Find the end time of the rS 
[V2_StartTime2] = rs_StartTime(V2_sample,V2_locs,fs,V2_tm,2)               %FUNCTION 4 --> Find the end time of the rS 
[V2_StartTime3] = rs_StartTime(V2_sample,V2_locs,fs,V2_tm,3)               %FUNCTION 4 --> Find the end time of the rS 
%% FULL PLOT
subplot(3,1,1)
hold on
plot(V1_tm,V1_sample);
plot(V1_tm(fix(V1_StartTime2*fs)),V1_sample(fix(V1_StartTime2*fs)),'*b')
plot(V1_tm(fix(V1_StartTime3*fs)),V1_sample(fix(V1_StartTime3*fs)),'*y')
plot(V1_tm(fix(V1_locs(1)*fs)),V1_sample(fix(V1_locs(1)*fs)),'*r');
plot(V1_tm(fix(V1_locs(2)*fs)),V1_sample(fix(V1_locs(2)*fs)),'*b');
plot(V1_tm(fix(V1_locs(3)*fs)),V1_sample(fix(V1_locs(3)*fs)),'*y');
plot(V1_tm(fix(V1_EndTime1*fs)),V1_sample(fix(V1_EndTime1*fs)),'*r')
plot(V1_tm(fix(V1_EndTime2*fs)),V1_sample(fix(V1_EndTime2*fs)),'*b')
plot(V1_tm(fix(V1_EndTime3*fs)),V1_sample(fix(V1_EndTime3*fs)),'*y')

subplot(3,1,2)
hold on
plot(V2_tm,V2_sample);
plot(V2_tm(fix(V2_StartTime1*fs)),V2_sample(fix(V2_StartTime1*fs)),'*r')
plot(V2_tm(fix(V2_StartTime2*fs)),V2_sample(fix(V2_StartTime2*fs)),'*b')
plot(V2_tm(fix(V2_StartTime3*fs)),V2_sample(fix(V2_StartTime3*fs)),'*y')
plot(V2_tm(fix(V2_locs(1)*fs)),V2_sample(fix(V2_locs(1)*fs)),'*r');
plot(V2_tm(fix(V2_locs(2)*fs)),V2_sample(fix(V2_locs(2)*fs)),'*b');
plot(V2_tm(fix(V2_locs(3)*fs)),V2_sample(fix(V2_locs(3)*fs)),'*y');
plot(V2_tm(fix(V2_EndTime1*fs)),V2_sample(fix(V2_EndTime1*fs)),'*r')
plot(V2_tm(fix(V2_EndTime2*fs)),V2_sample(fix(V2_EndTime2*fs)),'*b')
plot(V2_tm(fix(V2_EndTime3*fs)),V2_sample(fix(V2_EndTime3*fs)),'*y')


subplot(3,1,3)
hold on
plot(V1_tm,1)
plot(V1_tm(fix(V1_StartTime1*fs):fix(V1_EndTime1*fs)),V1_sample(fix(V1_StartTime1*fs):fix(V1_EndTime1*fs)));
plot(V2_tm(fix(V2_StartTime1*fs):fix(V2_EndTime1*fs)),V2_sample(fix(V2_StartTime1*fs):fix(V2_EndTime1*fs)));